---
import TatoosSlide from "~components/TatoosSlide.astro";
import Hand from "~components/Hand.astro";

export interface Props {
    title?: string;
    subtitle?: string;
    tabsLabel?: string;
    classModifier?: string;
    tabs: Array<{
        name: string,
        slides: Array<{
            src: string,
            srcBig?: string,
            title?: string,
            color?: string,
            width?: number,
        }>,
    }>;
}

const { title, subtitle, tabsLabel, tabs, classModifier = '' } = Astro.props;
---

<div class={`tabs-slider ${classModifier}`}>
    {title && <h2 class="tabs-slider_title">{title}</h2>}
    {subtitle && <p class="tabs-slider_subtitle">{subtitle}</p>}
    {tabsLabel && <span class="tabs-slider_label">{tabsLabel}:</span>}
    <div class="tabs-slider_buttons">
        <Hand modifier="hand__tabs" />

        {tabs.map((tab) => (
            <button class="tabs-slider_button">
                <div class="tabs-slider_button-bg"></div>
                {tab.name}
            </button>
        ))}
    </div>
    
    <div class="tabs-slider_list">
        <div class="swiper-holder">
            <div class="swiper">
                <div class="swiper-wrapper">
                    {tabs.map((tab) => (
                        tab.slides.map((slide) => (
                            <div class="swiper-slide" data-category={tab.name.toLowerCase()} style={{width: slide.width ? `${slide.width}px` : 'auto'}}>
                                <div class="tabs-slider_slide">
                                        <TatoosSlide
                                            src={slide.src}
                                            href={slide.srcBig || slide.src}
                                            color={slide.color}
                                            title={slide.title}
                                        />
                                </div>
                            </div>
                        ))
                    ))}
                </div>

                <div class="swiper-pagination"></div>
            </div>

            <div class="swiper-button-prev"></div>
            <div class="swiper-button-next"></div>
        </div>
    </div>
</div>
<script>
    import Swiper from "swiper";
    import { Navigation, Pagination } from "swiper/modules";
    const swiper = new Swiper(".swiper", {
        loop: false,
        modules: [Navigation, Pagination],
        slidesPerView: 'auto',

        spaceBetween: 20,
        pagination: {
            clickable: true,
            el: ".swiper-pagination",
        },
        navigation: {
            nextEl: ".swiper-button-next",
            prevEl: ".swiper-button-prev",
        },
    });

    const tabsSliders = document.querySelectorAll('.tabs-slider');
    
    tabsSliders.forEach((slider) => {
        const slides = slider.querySelectorAll('.tabs-slider .swiper-slide');
        const buttons = slider.querySelectorAll('.tabs-slider_button');

        function selectCategory(category) {
            slides.forEach(slide => {
                const isSameCategory = slide.dataset.category.toLowerCase() === category;
                console.log(slide.dataset.category.toLowerCase(),  category, isSameCategory);
                slide.style.display = isSameCategory ? 'block' : 'none'
            });
        }

        buttons.forEach(button => button.addEventListener('click', (e) => {
            e.preventDefault();

            buttons.forEach(button => button.classList.remove('active'));
            e.target.classList.add('active');

            selectCategory(e.target.innerText.toLowerCase());
        }));

        buttons[0].classList.add('active');
        selectCategory(buttons[0].innerText.toLowerCase());
    });
</script>
